import java.text.SimpleDateFormat

plugins {
    id 'org.springframework.boot' version '2.6.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
    id 'application'
    id 'org.sonarqube' version '3.3'
    id 'jacoco'
}

allprojects {

    apply plugin: 'application'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'
    apply plugin: 'jacoco'

    ext.baseVersion = "1.0"
    ext.snapshotVersion = true

    group = "com.epam.esm"
    version = "$baseVersion" + (snapshotVersion ? "-SNAPSHOT" : "")

    sourceCompatibility = '11'
    targetCompatibility = '11'

    mainClassName = 'com.epam.esm.CertificateApp'

    jacoco {
        toolVersion = "0.8.7"
        reportsDirectory = layout.buildDirectory.dir('jacoco')
    }

    jacocoTestReport {
        reports {
            xml.required=true
            csv.required=false
            html.required=false
            xml.destination file("${buildDir}/jacoco/jacoco.xml")
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    ext.sharedManifest = manifest {

        attributes(
                'Built-By': System.properties['user.name'],
                'Build-Timestamp': new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                'Created-By': "Gradle ${gradle.gradleVersion}",
                'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}",
                'Specification-Title': "Gift-Certificates",
                'Specification-Version': "1",
                'Specification-Vendor': "IM, Inc.",
                'Implementation-Title': project.name,
                'Implementation-Version': version,
                'Implementation-Vendor': "IM, Inc.",
                'Main-Class': 'com.epam.esm.CertificateApp'
        )
    }

    jar {
        manifest = project.manifest {
            from sharedManifest
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-hateoas'
        implementation 'org.springframework.boot:spring-boot-starter-jdbc'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        compileOnly 'org.projectlombok:lombok'
        runtimeOnly 'com.h2database:h2'
        runtimeOnly 'mysql:mysql-connector-java'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.4.5'

        implementation 'io.jsonwebtoken:jjwt:0.9.1'

        annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'
    }

}

sonarqube {
    properties {
        property "sonar.projectName", "GiftCertificates-app"
        property "sonar.projectKey", "org.sonarqube:gradle-multimodule"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.sources", "src"
        property "sonar.core.codeCoveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/jacoco/jacoco.xml"
    }
}

subprojects {

    test {
        useJUnitPlatform()
        dependsOn 'cleanTest'
        testLogging {
            events "passed", "skipped", "failed"
        }
    }

    task allDeps(type: DependencyReportTask) {}
}

