pipeline {
    agent any

    stages {
        stage('Pool') {
            steps {
                git branch: 'task_6', url: 'https://github.com/iMateshuk/epamLaba'
            }
        }
        
        stage('Test') {
            steps {
                sh "chmod +x -R ${env.WORKSPACE}"
                sh './gradlew test'
            }
        }
        
        stage('Build') {
            steps {
                sh "chmod +x -R ${env.WORKSPACE}"
                sh './gradlew war -x test -p controller'
            }
        }
        
        stage('JaCoCo') {
            steps {
                sh "chmod +x -R ${env.WORKSPACE}"
                sh './gradlew jacocoTestReport'
            }
        }
        
        stage('SonarQube analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
					sh "chmod +x -R ${env.WORKSPACE}"
                    sh './gradlew sonarqube'
                }
            }
        }
        
        stage("Quality Gate") {
            steps {
                timeout(time: 5, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        
        stage ('Deploy to Tomcat') {
            steps {
                script {
                    deploy adapters: [tomcat9(credentialsId: '15d45f0b-b0db-41bb-9b16-7b66dd4a346f', path: '', url: 'http://localhost:8080')], contextPath: '/gift-certificate-app', onFailure: false, war: 'controller/build/libs/*.war' 
                }
            }
        }
    }
    
    post {
        always {
            junit '**/build/test-results/test/TEST-*.xml'
        }
    }
}
